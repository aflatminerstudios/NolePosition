<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement variables

//xMin = 128;
//xMax = 896;

gridX = 2;
gridY = 3;

var coords = scrConvertFromGrid(gridX, gridY);

x = coords[0];
y = coords[1];

flashCounter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change flashcounter and reset alarm, if necessary

flashCounter++;

if (flashCounter == 9) {
  flashCounter = 0;
  
  with (objGameControl) {
    alarm[0] = global.tickSpeed * room_speed;
    alarm[1] = global.tickSpeed * 1.5 * room_speed;
  }
  
  gridX = 2;
  gridY = 3;
  
  var coords = scrConvertFromGrid(gridX, gridY);
  
  x = coords[0];
  y = coords[1];
} else {
  alarm[0] = global.flashSpeed * room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Movement, including run button

if (scrIsLeftButtonPressed() &amp;&amp; gridX &gt; 0) {
  gridX -= 1;
  
  var coords = scrConvertFromGrid(gridX, gridY);

  x = coords[0];
  y = coords[1];
} else if (scrIsRightButtonPressed() &amp;&amp; gridX &lt; global.gridMax) {
  gridX += 1;
  var coords = scrConvertFromGrid(gridX, gridY);

  x = coords[0];
  y = coords[1];  
}

if (scrIsRunButtonPressed()) {
  global.tickSpeed /= 2;
} else if (scrIsRunButtonReleased()) {
  global.tickSpeed *= 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision with enemy. Game over if all lives lost

if (--lives &lt; 1) {

  show_message("Game over! You lose!  You scored " + string(score) + " points! You reached level " + string(global.level) + ".");
  
  //reset score and level
  score = 0;
  with (objPersistentStats) {
    level = 1;
  }
  
  
  room_restart();
} else {
  with (objEnemy) {
    instance_destroy();
  }
  
  with (objGameControl) {
    alarm[0] = -5; //global.tickSpeed * room_speed;
    alarm[1] = -5;
    for (var i = 0; i &lt; 5; ++i) {
      enemies[3, i] = 0;
      enemies[2, i] = 0;
      if (i &lt; 4) {
        enemies[1, i] = 0;
        if (i &lt; 3) {
          enemies[0, i] = 0;
        }
      }
    }
    
  }
  
  audio_play_sound(sndCrash, 15, false);

    
  alarm[0] = global.flashSpeed * room_speed;
  
 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Only draw player when flashcounter is even

if (flashCounter % 2 == 0) {
  draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
